// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expect Promotion Snapshot expect AddPromotionModal Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <addPromotionModal
    errors={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="btn btn-info mt-1 mb-1"
          onClick={[Function]}
>
          Add Promotion +
</button>,
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropTransition={
                    Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
          }
          centered={false}
          fade={true}
          isOpen={false}
          keyboard={true}
          modalTransition={
                    Object {
                              "timeout": 300,
                            }
          }
          onClosed={[Function]}
          onOpened={[Function]}
          returnFocusAfterClose={true}
          role="dialog"
          scrollable={false}
          toggle={[Function]}
          unmountOnClose={true}
          zIndex={1050}
>
          <div
                    className="modal-header"
          >
                    Add Promotion
          </div>
          <div
                    className="modal-body"
          >
                    <div
                              className="form-group"
                    >
                              <input
                                        className="form-control"
                                        id="name"
                                        name="code"
                                        onChange={[Function]}
                                        placeholder="Promotion Code"
                                        type="text"
                              />
                    </div>
                    <div
                              className="form-group"
                    >
                              <input
                                        className="form-control"
                                        name="discount"
                                        onChange={[Function]}
                                        placeholder="Promotion Discount"
                                        type="number"
                              />
                    </div>
                    <div
                              className="custom-control custom-checkbox"
                    >
                              <input
                                        checked={undefined}
                                        className="custom-control-input"
                                        name="active"
                                        onChange={[Function]}
                                        type="checkbox"
                              />
                              <label
                                        className="custom-control-label"
                              >
                                        Is Active ?
                              </label>
                    </div>
          </div>
          <div
                    className="modal-footer"
          >
                    <button
                              className="btn btn-primary mr-1"
                              onClick={[Function]}
                    >
                              Add Promotion
                    </button>
                    <button
                              className="btn btn-warning"
                              onClick={[Function]}
                    >
                              Cancel
                    </button>
          </div>
</Modal>,
      ],
      "className": "col-sm-12",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Add Promotion +",
          "className": "btn btn-info mt-1 mb-1",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Add Promotion +",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "backdrop": true,
          "backdropTransition": Object {
            "mountOnEnter": true,
            "timeout": 150,
          },
          "centered": false,
          "children": Array [
            <div
              className="modal-header"
>
              Add Promotion
</div>,
            <div
              className="modal-body"
>
              <div
                            className="form-group"
              >
                            <input
                                          className="form-control"
                                          id="name"
                                          name="code"
                                          onChange={[Function]}
                                          placeholder="Promotion Code"
                                          type="text"
                            />
              </div>
              <div
                            className="form-group"
              >
                            <input
                                          className="form-control"
                                          name="discount"
                                          onChange={[Function]}
                                          placeholder="Promotion Discount"
                                          type="number"
                            />
              </div>
              <div
                            className="custom-control custom-checkbox"
              >
                            <input
                                          checked={undefined}
                                          className="custom-control-input"
                                          name="active"
                                          onChange={[Function]}
                                          type="checkbox"
                            />
                            <label
                                          className="custom-control-label"
                            >
                                          Is Active ?
                            </label>
              </div>
</div>,
            <div
              className="modal-footer"
>
              <button
                            className="btn btn-primary mr-1"
                            onClick={[Function]}
              >
                            Add Promotion
              </button>
              <button
                            className="btn btn-warning"
                            onClick={[Function]}
              >
                            Cancel
              </button>
</div>,
          ],
          "fade": true,
          "isOpen": false,
          "keyboard": true,
          "modalTransition": Object {
            "timeout": 300,
          },
          "onClosed": [Function],
          "onOpened": [Function],
          "returnFocusAfterClose": true,
          "role": "dialog",
          "scrollable": false,
          "toggle": [Function],
          "unmountOnClose": true,
          "zIndex": 1050,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Promotion",
              "className": "modal-header",
            },
            "ref": null,
            "rendered": "Add Promotion",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="form-group"
>
                  <input
                                    className="form-control"
                                    id="name"
                                    name="code"
                                    onChange={[Function]}
                                    placeholder="Promotion Code"
                                    type="text"
                  />
</div>,
                <div
                  className="form-group"
>
                  <input
                                    className="form-control"
                                    name="discount"
                                    onChange={[Function]}
                                    placeholder="Promotion Discount"
                                    type="number"
                  />
</div>,
                <div
                  className="custom-control custom-checkbox"
>
                  <input
                                    checked={undefined}
                                    className="custom-control-input"
                                    name="active"
                                    onChange={[Function]}
                                    type="checkbox"
                  />
                  <label
                                    className="custom-control-label"
                  >
                                    Is Active ?
                  </label>
</div>,
              ],
              "className": "modal-body",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="form-control"
                      id="name"
                      name="code"
                      onChange={[Function]}
                      placeholder="Promotion Code"
                      type="text"
/>,
                    undefined,
                  ],
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "id": "name",
                      "name": "code",
                      "onChange": [Function],
                      "placeholder": "Promotion Code",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  undefined,
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      className="form-control"
                      name="discount"
                      onChange={[Function]}
                      placeholder="Promotion Discount"
                      type="number"
/>,
                    undefined,
                  ],
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "name": "discount",
                      "onChange": [Function],
                      "placeholder": "Promotion Discount",
                      "type": "number",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  undefined,
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      checked={undefined}
                      className="custom-control-input"
                      name="active"
                      onChange={[Function]}
                      type="checkbox"
/>,
                    <label
                      className="custom-control-label"
>
                      Is Active ?
</label>,
                  ],
                  "className": "custom-control custom-checkbox",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "checked": undefined,
                      "className": "custom-control-input",
                      "name": "active",
                      "onChange": [Function],
                      "type": "checkbox",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Is Active ?",
                      "className": "custom-control-label",
                    },
                    "ref": null,
                    "rendered": "Is Active ?",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="btn btn-primary mr-1"
                  onClick={[Function]}
>
                  Add Promotion
</button>,
                <button
                  className="btn btn-warning"
                  onClick={[Function]}
>
                  Cancel
</button>,
              ],
              "className": "modal-footer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Promotion",
                  "className": "btn btn-primary mr-1",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Add Promotion",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-warning",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="btn btn-info mt-1 mb-1"
            onClick={[Function]}
>
            Add Promotion +
</button>,
          <Modal
            autoFocus={true}
            backdrop={true}
            backdropTransition={
                        Object {
                                    "mountOnEnter": true,
                                    "timeout": 150,
                                  }
            }
            centered={false}
            fade={true}
            isOpen={false}
            keyboard={true}
            modalTransition={
                        Object {
                                    "timeout": 300,
                                  }
            }
            onClosed={[Function]}
            onOpened={[Function]}
            returnFocusAfterClose={true}
            role="dialog"
            scrollable={false}
            toggle={[Function]}
            unmountOnClose={true}
            zIndex={1050}
>
            <div
                        className="modal-header"
            >
                        Add Promotion
            </div>
            <div
                        className="modal-body"
            >
                        <div
                                    className="form-group"
                        >
                                    <input
                                                className="form-control"
                                                id="name"
                                                name="code"
                                                onChange={[Function]}
                                                placeholder="Promotion Code"
                                                type="text"
                                    />
                        </div>
                        <div
                                    className="form-group"
                        >
                                    <input
                                                className="form-control"
                                                name="discount"
                                                onChange={[Function]}
                                                placeholder="Promotion Discount"
                                                type="number"
                                    />
                        </div>
                        <div
                                    className="custom-control custom-checkbox"
                        >
                                    <input
                                                checked={undefined}
                                                className="custom-control-input"
                                                name="active"
                                                onChange={[Function]}
                                                type="checkbox"
                                    />
                                    <label
                                                className="custom-control-label"
                                    >
                                                Is Active ?
                                    </label>
                        </div>
            </div>
            <div
                        className="modal-footer"
            >
                        <button
                                    className="btn btn-primary mr-1"
                                    onClick={[Function]}
                        >
                                    Add Promotion
                        </button>
                        <button
                                    className="btn btn-warning"
                                    onClick={[Function]}
                        >
                                    Cancel
                        </button>
            </div>
</Modal>,
        ],
        "className": "col-sm-12",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Add Promotion +",
            "className": "btn btn-info mt-1 mb-1",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Add Promotion +",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": true,
            "backdrop": true,
            "backdropTransition": Object {
              "mountOnEnter": true,
              "timeout": 150,
            },
            "centered": false,
            "children": Array [
              <div
                className="modal-header"
>
                Add Promotion
</div>,
              <div
                className="modal-body"
>
                <div
                                className="form-group"
                >
                                <input
                                                className="form-control"
                                                id="name"
                                                name="code"
                                                onChange={[Function]}
                                                placeholder="Promotion Code"
                                                type="text"
                                />
                </div>
                <div
                                className="form-group"
                >
                                <input
                                                className="form-control"
                                                name="discount"
                                                onChange={[Function]}
                                                placeholder="Promotion Discount"
                                                type="number"
                                />
                </div>
                <div
                                className="custom-control custom-checkbox"
                >
                                <input
                                                checked={undefined}
                                                className="custom-control-input"
                                                name="active"
                                                onChange={[Function]}
                                                type="checkbox"
                                />
                                <label
                                                className="custom-control-label"
                                >
                                                Is Active ?
                                </label>
                </div>
</div>,
              <div
                className="modal-footer"
>
                <button
                                className="btn btn-primary mr-1"
                                onClick={[Function]}
                >
                                Add Promotion
                </button>
                <button
                                className="btn btn-warning"
                                onClick={[Function]}
                >
                                Cancel
                </button>
</div>,
            ],
            "fade": true,
            "isOpen": false,
            "keyboard": true,
            "modalTransition": Object {
              "timeout": 300,
            },
            "onClosed": [Function],
            "onOpened": [Function],
            "returnFocusAfterClose": true,
            "role": "dialog",
            "scrollable": false,
            "toggle": [Function],
            "unmountOnClose": true,
            "zIndex": 1050,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Promotion",
                "className": "modal-header",
              },
              "ref": null,
              "rendered": "Add Promotion",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="form-group"
>
                    <input
                                        className="form-control"
                                        id="name"
                                        name="code"
                                        onChange={[Function]}
                                        placeholder="Promotion Code"
                                        type="text"
                    />
</div>,
                  <div
                    className="form-group"
>
                    <input
                                        className="form-control"
                                        name="discount"
                                        onChange={[Function]}
                                        placeholder="Promotion Discount"
                                        type="number"
                    />
</div>,
                  <div
                    className="custom-control custom-checkbox"
>
                    <input
                                        checked={undefined}
                                        className="custom-control-input"
                                        name="active"
                                        onChange={[Function]}
                                        type="checkbox"
                    />
                    <label
                                        className="custom-control-label"
                    >
                                        Is Active ?
                    </label>
</div>,
                ],
                "className": "modal-body",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="form-control"
                        id="name"
                        name="code"
                        onChange={[Function]}
                        placeholder="Promotion Code"
                        type="text"
/>,
                      undefined,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "id": "name",
                        "name": "code",
                        "onChange": [Function],
                        "placeholder": "Promotion Code",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    undefined,
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        className="form-control"
                        name="discount"
                        onChange={[Function]}
                        placeholder="Promotion Discount"
                        type="number"
/>,
                      undefined,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "name": "discount",
                        "onChange": [Function],
                        "placeholder": "Promotion Discount",
                        "type": "number",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    undefined,
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        checked={undefined}
                        className="custom-control-input"
                        name="active"
                        onChange={[Function]}
                        type="checkbox"
/>,
                      <label
                        className="custom-control-label"
>
                        Is Active ?
</label>,
                    ],
                    "className": "custom-control custom-checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "checked": undefined,
                        "className": "custom-control-input",
                        "name": "active",
                        "onChange": [Function],
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Is Active ?",
                        "className": "custom-control-label",
                      },
                      "ref": null,
                      "rendered": "Is Active ?",
                      "type": "label",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="btn btn-primary mr-1"
                    onClick={[Function]}
>
                    Add Promotion
</button>,
                  <button
                    className="btn btn-warning"
                    onClick={[Function]}
>
                    Cancel
</button>,
                ],
                "className": "modal-footer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Add Promotion",
                    "className": "btn btn-primary mr-1",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Add Promotion",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Cancel",
                    "className": "btn btn-warning",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`expect Promotion Snapshot expect EditPromotionModal Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <editPromotionModal
    errors={Object {}}
    promotion={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Modal
        autoFocus={true}
        backdrop={true}
        backdropTransition={
                Object {
                        "mountOnEnter": true,
                        "timeout": 150,
                      }
        }
        centered={false}
        fade={true}
        isOpen={false}
        keyboard={true}
        modalTransition={
                Object {
                        "timeout": 300,
                      }
        }
        onClosed={[Function]}
        onOpened={[Function]}
        returnFocusAfterClose={true}
        role="dialog"
        scrollable={false}
        toggle={[Function]}
        unmountOnClose={true}
        zIndex={1050}
>
        <ModalHeader
                charCode={215}
                closeAriaLabel="Close"
                tag="h5"
                wrapTag="div"
        >
                Edit Promotion
        </ModalHeader>
        <ModalBody
                tag="div"
        >
                <form>
                        <div
                                className="form-group"
                        >
                                <label>
                                        Code
                                </label>
                                <input
                                        className="form-control"
                                        name="code"
                                        onChange={[Function]}
                                        type="text"
                                        value={undefined}
                                />
                        </div>
                        <div
                                className="form-group"
                        >
                                <label>
                                        Discount
                                </label>
                                <input
                                        className="form-control"
                                        name="discount"
                                        onChange={[Function]}
                                        type="number"
                                        value={undefined}
                                />
                        </div>
                        <div
                                className="custom-control custom-checkbox"
                        >
                                <input
                                        checked={undefined}
                                        className="custom-control-input"
                                        name="active"
                                        onChange={[Function]}
                                        type="checkbox"
                                />
                                <label
                                        className="custom-control-label"
                                >
                                        Is Active ?
                                </label>
                        </div>
                </form>
        </ModalBody>
        <ModalFooter
                tag="div"
        >
                <button
                        className="btn btn-primary mr-1"
                        onClick={[Function]}
                >
                        Edit
                </button>
                <button
                        className="btn btn-warning"
                        onClick={[Function]}
                >
                        Cancel
                </button>
        </ModalFooter>
</Modal>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoFocus": true,
        "backdrop": true,
        "backdropTransition": Object {
          "mountOnEnter": true,
          "timeout": 150,
        },
        "centered": false,
        "children": Array [
          <ModalHeader
            charCode={215}
            closeAriaLabel="Close"
            tag="h5"
            wrapTag="div"
>
            Edit Promotion
</ModalHeader>,
          <ModalBody
            tag="div"
>
            <form>
                        <div
                                    className="form-group"
                        >
                                    <label>
                                                Code
                                    </label>
                                    <input
                                                className="form-control"
                                                name="code"
                                                onChange={[Function]}
                                                type="text"
                                                value={undefined}
                                    />
                        </div>
                        <div
                                    className="form-group"
                        >
                                    <label>
                                                Discount
                                    </label>
                                    <input
                                                className="form-control"
                                                name="discount"
                                                onChange={[Function]}
                                                type="number"
                                                value={undefined}
                                    />
                        </div>
                        <div
                                    className="custom-control custom-checkbox"
                        >
                                    <input
                                                checked={undefined}
                                                className="custom-control-input"
                                                name="active"
                                                onChange={[Function]}
                                                type="checkbox"
                                    />
                                    <label
                                                className="custom-control-label"
                                    >
                                                Is Active ?
                                    </label>
                        </div>
            </form>
</ModalBody>,
          <ModalFooter
            tag="div"
>
            <button
                        className="btn btn-primary mr-1"
                        onClick={[Function]}
            >
                        Edit
            </button>
            <button
                        className="btn btn-warning"
                        onClick={[Function]}
            >
                        Cancel
            </button>
</ModalFooter>,
        ],
        "fade": true,
        "isOpen": false,
        "keyboard": true,
        "modalTransition": Object {
          "timeout": 300,
        },
        "onClosed": [Function],
        "onOpened": [Function],
        "returnFocusAfterClose": true,
        "role": "dialog",
        "scrollable": false,
        "toggle": [Function],
        "unmountOnClose": true,
        "zIndex": 1050,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "charCode": 215,
            "children": "Edit Promotion",
            "closeAriaLabel": "Close",
            "tag": "h5",
            "wrapTag": "div",
          },
          "ref": null,
          "rendered": "Edit Promotion",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <form>
              <div
                            className="form-group"
              >
                            <label>
                                          Code
                            </label>
                            <input
                                          className="form-control"
                                          name="code"
                                          onChange={[Function]}
                                          type="text"
                                          value={undefined}
                            />
              </div>
              <div
                            className="form-group"
              >
                            <label>
                                          Discount
                            </label>
                            <input
                                          className="form-control"
                                          name="discount"
                                          onChange={[Function]}
                                          type="number"
                                          value={undefined}
                            />
              </div>
              <div
                            className="custom-control custom-checkbox"
              >
                            <input
                                          checked={undefined}
                                          className="custom-control-input"
                                          name="active"
                                          onChange={[Function]}
                                          type="checkbox"
                            />
                            <label
                                          className="custom-control-label"
                            >
                                          Is Active ?
                            </label>
              </div>
</form>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="form-group"
>
                  <label>
                                    Code
                  </label>
                  <input
                                    className="form-control"
                                    name="code"
                                    onChange={[Function]}
                                    type="text"
                                    value={undefined}
                  />
</div>,
                <div
                  className="form-group"
>
                  <label>
                                    Discount
                  </label>
                  <input
                                    className="form-control"
                                    name="discount"
                                    onChange={[Function]}
                                    type="number"
                                    value={undefined}
                  />
</div>,
                <div
                  className="custom-control custom-checkbox"
>
                  <input
                                    checked={undefined}
                                    className="custom-control-input"
                                    name="active"
                                    onChange={[Function]}
                                    type="checkbox"
                  />
                  <label
                                    className="custom-control-label"
                  >
                                    Is Active ?
                  </label>
</div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Code
</label>,
                    <input
                      className="form-control"
                      name="code"
                      onChange={[Function]}
                      type="text"
                      value={undefined}
/>,
                    undefined,
                  ],
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Code",
                    },
                    "ref": null,
                    "rendered": "Code",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "name": "code",
                      "onChange": [Function],
                      "type": "text",
                      "value": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  undefined,
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label>
                      Discount
</label>,
                    <input
                      className="form-control"
                      name="discount"
                      onChange={[Function]}
                      type="number"
                      value={undefined}
/>,
                    undefined,
                  ],
                  "className": "form-group",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Discount",
                    },
                    "ref": null,
                    "rendered": "Discount",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "name": "discount",
                      "onChange": [Function],
                      "type": "number",
                      "value": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  undefined,
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      checked={undefined}
                      className="custom-control-input"
                      name="active"
                      onChange={[Function]}
                      type="checkbox"
/>,
                    <label
                      className="custom-control-label"
>
                      Is Active ?
</label>,
                  ],
                  "className": "custom-control custom-checkbox",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "checked": undefined,
                      "className": "custom-control-input",
                      "name": "active",
                      "onChange": [Function],
                      "type": "checkbox",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Is Active ?",
                      "className": "custom-control-label",
                    },
                    "ref": null,
                    "rendered": "Is Active ?",
                    "type": "label",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <button
                className="btn btn-primary mr-1"
                onClick={[Function]}
>
                Edit
</button>,
              <button
                className="btn btn-warning"
                onClick={[Function]}
>
                Cancel
</button>,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Edit",
                "className": "btn btn-primary mr-1",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Edit",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "className": "btn btn-warning",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "button",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          autoFocus={true}
          backdrop={true}
          backdropTransition={
                    Object {
                              "mountOnEnter": true,
                              "timeout": 150,
                            }
          }
          centered={false}
          fade={true}
          isOpen={false}
          keyboard={true}
          modalTransition={
                    Object {
                              "timeout": 300,
                            }
          }
          onClosed={[Function]}
          onOpened={[Function]}
          returnFocusAfterClose={true}
          role="dialog"
          scrollable={false}
          toggle={[Function]}
          unmountOnClose={true}
          zIndex={1050}
>
          <ModalHeader
                    charCode={215}
                    closeAriaLabel="Close"
                    tag="h5"
                    wrapTag="div"
          >
                    Edit Promotion
          </ModalHeader>
          <ModalBody
                    tag="div"
          >
                    <form>
                              <div
                                        className="form-group"
                              >
                                        <label>
                                                  Code
                                        </label>
                                        <input
                                                  className="form-control"
                                                  name="code"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value={undefined}
                                        />
                              </div>
                              <div
                                        className="form-group"
                              >
                                        <label>
                                                  Discount
                                        </label>
                                        <input
                                                  className="form-control"
                                                  name="discount"
                                                  onChange={[Function]}
                                                  type="number"
                                                  value={undefined}
                                        />
                              </div>
                              <div
                                        className="custom-control custom-checkbox"
                              >
                                        <input
                                                  checked={undefined}
                                                  className="custom-control-input"
                                                  name="active"
                                                  onChange={[Function]}
                                                  type="checkbox"
                                        />
                                        <label
                                                  className="custom-control-label"
                                        >
                                                  Is Active ?
                                        </label>
                              </div>
                    </form>
          </ModalBody>
          <ModalFooter
                    tag="div"
          >
                    <button
                              className="btn btn-primary mr-1"
                              onClick={[Function]}
                    >
                              Edit
                    </button>
                    <button
                              className="btn btn-warning"
                              onClick={[Function]}
                    >
                              Cancel
                    </button>
          </ModalFooter>
</Modal>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "backdrop": true,
          "backdropTransition": Object {
            "mountOnEnter": true,
            "timeout": 150,
          },
          "centered": false,
          "children": Array [
            <ModalHeader
              charCode={215}
              closeAriaLabel="Close"
              tag="h5"
              wrapTag="div"
>
              Edit Promotion
</ModalHeader>,
            <ModalBody
              tag="div"
>
              <form>
                            <div
                                          className="form-group"
                            >
                                          <label>
                                                        Code
                                          </label>
                                          <input
                                                        className="form-control"
                                                        name="code"
                                                        onChange={[Function]}
                                                        type="text"
                                                        value={undefined}
                                          />
                            </div>
                            <div
                                          className="form-group"
                            >
                                          <label>
                                                        Discount
                                          </label>
                                          <input
                                                        className="form-control"
                                                        name="discount"
                                                        onChange={[Function]}
                                                        type="number"
                                                        value={undefined}
                                          />
                            </div>
                            <div
                                          className="custom-control custom-checkbox"
                            >
                                          <input
                                                        checked={undefined}
                                                        className="custom-control-input"
                                                        name="active"
                                                        onChange={[Function]}
                                                        type="checkbox"
                                          />
                                          <label
                                                        className="custom-control-label"
                                          >
                                                        Is Active ?
                                          </label>
                            </div>
              </form>
</ModalBody>,
            <ModalFooter
              tag="div"
>
              <button
                            className="btn btn-primary mr-1"
                            onClick={[Function]}
              >
                            Edit
              </button>
              <button
                            className="btn btn-warning"
                            onClick={[Function]}
              >
                            Cancel
              </button>
</ModalFooter>,
          ],
          "fade": true,
          "isOpen": false,
          "keyboard": true,
          "modalTransition": Object {
            "timeout": 300,
          },
          "onClosed": [Function],
          "onOpened": [Function],
          "returnFocusAfterClose": true,
          "role": "dialog",
          "scrollable": false,
          "toggle": [Function],
          "unmountOnClose": true,
          "zIndex": 1050,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "charCode": 215,
              "children": "Edit Promotion",
              "closeAriaLabel": "Close",
              "tag": "h5",
              "wrapTag": "div",
            },
            "ref": null,
            "rendered": "Edit Promotion",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <form>
                <div
                                className="form-group"
                >
                                <label>
                                                Code
                                </label>
                                <input
                                                className="form-control"
                                                name="code"
                                                onChange={[Function]}
                                                type="text"
                                                value={undefined}
                                />
                </div>
                <div
                                className="form-group"
                >
                                <label>
                                                Discount
                                </label>
                                <input
                                                className="form-control"
                                                name="discount"
                                                onChange={[Function]}
                                                type="number"
                                                value={undefined}
                                />
                </div>
                <div
                                className="custom-control custom-checkbox"
                >
                                <input
                                                checked={undefined}
                                                className="custom-control-input"
                                                name="active"
                                                onChange={[Function]}
                                                type="checkbox"
                                />
                                <label
                                                className="custom-control-label"
                                >
                                                Is Active ?
                                </label>
                </div>
</form>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="form-group"
>
                    <label>
                                        Code
                    </label>
                    <input
                                        className="form-control"
                                        name="code"
                                        onChange={[Function]}
                                        type="text"
                                        value={undefined}
                    />
</div>,
                  <div
                    className="form-group"
>
                    <label>
                                        Discount
                    </label>
                    <input
                                        className="form-control"
                                        name="discount"
                                        onChange={[Function]}
                                        type="number"
                                        value={undefined}
                    />
</div>,
                  <div
                    className="custom-control custom-checkbox"
>
                    <input
                                        checked={undefined}
                                        className="custom-control-input"
                                        name="active"
                                        onChange={[Function]}
                                        type="checkbox"
                    />
                    <label
                                        className="custom-control-label"
                    >
                                        Is Active ?
                    </label>
</div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label>
                        Code
</label>,
                      <input
                        className="form-control"
                        name="code"
                        onChange={[Function]}
                        type="text"
                        value={undefined}
/>,
                      undefined,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Code",
                      },
                      "ref": null,
                      "rendered": "Code",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "name": "code",
                        "onChange": [Function],
                        "type": "text",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    undefined,
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label>
                        Discount
</label>,
                      <input
                        className="form-control"
                        name="discount"
                        onChange={[Function]}
                        type="number"
                        value={undefined}
/>,
                      undefined,
                    ],
                    "className": "form-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Discount",
                      },
                      "ref": null,
                      "rendered": "Discount",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control",
                        "name": "discount",
                        "onChange": [Function],
                        "type": "number",
                        "value": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    undefined,
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        checked={undefined}
                        className="custom-control-input"
                        name="active"
                        onChange={[Function]}
                        type="checkbox"
/>,
                      <label
                        className="custom-control-label"
>
                        Is Active ?
</label>,
                    ],
                    "className": "custom-control custom-checkbox",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "checked": undefined,
                        "className": "custom-control-input",
                        "name": "active",
                        "onChange": [Function],
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Is Active ?",
                        "className": "custom-control-label",
                      },
                      "ref": null,
                      "rendered": "Is Active ?",
                      "type": "label",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <button
                  className="btn btn-primary mr-1"
                  onClick={[Function]}
>
                  Edit
</button>,
                <button
                  className="btn btn-warning"
                  onClick={[Function]}
>
                  Cancel
</button>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Edit",
                  "className": "btn btn-primary mr-1",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Edit",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "className": "btn btn-warning",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "button",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`expect Promotion Snapshot expect PromotionItem Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <promotionItem
    errors={Object {}}
    promotions={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div />,
        <div
          className="row justify-content-around"
>
          
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "row justify-content-around",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div />,
          <div
            className="row justify-content-around"
>
            
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "row justify-content-around",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
